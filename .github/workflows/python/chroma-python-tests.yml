name: Chroma Python Base Tests

on:
  workflow_call:
    inputs:
      python_versions:
        description: 'Python versions to test (as json array)'
        required: false
        default: '["3.8"]'
        type: string


jobs:
  test:
    timeout-minutes: 90
    strategy:
      matrix:
        python: ${{fromJson(inputs.python_versions)}}
        platform: [ubuntu-latest, windows-latest]
        testfile: ["--ignore-glob 'chromadb/test/property/*' --ignore-glob 'chromadb/test/stress/*' --ignore-glob 'chromadb/test/distributed/*' --ignore='chromadb/test/auth/test_simple_rbac_authz.py'",
                   "chromadb/test/auth/test_simple_rbac_authz.py",
                   "chromadb/test/property/test_add.py",
                   "chromadb/test/property/test_collections.py",
                   "chromadb/test/property/test_cross_version_persist.py",
                   "chromadb/test/property/test_embeddings.py",
                   "chromadb/test/property/test_filtering.py",
                   "chromadb/test/property/test_persist.py"]
    runs-on: ${{ matrix.platform }}
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python }}
    - name: Install test dependencies
      run: python -m pip install -r requirements.txt && python -m pip install -r requirements_dev.txt
    - name: Upgrade SQLite
      run: python bin/windows_upgrade_sqlite.py
      if: runner.os == 'Windows'
    - name: Test
      run: python -m pytest ${{ matrix.testfile }}
